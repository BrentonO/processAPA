

================================================================
== Vitis HLS Report for 'process_data_Pipeline_first_chan_loop_first_chan_frame_loop'
================================================================
* Date:           Tue Aug  1 14:25:25 2023

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        processapa
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.735 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    25605|    25605|  0.256 ms|  0.256 ms|  25605|  25605|       no|
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                                         |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |                Loop Name                |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +-----------------------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- first_chan_loop_first_chan_frame_loop  |    25603|    25603|         5|          1|          1|  25600|       yes|
        +-----------------------------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.94>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%sum = alloca i32 1"   --->   Operation 8 'alloca' 'sum' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%iChan = alloca i32 1"   --->   Operation 10 'alloca' 'iChan' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 11 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.46ns)   --->   "%store_ln0 = store i15 0, i15 %indvar_flatten"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 13 [1/1] (0.46ns)   --->   "%store_ln0 = store i9 0, i9 %iChan"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 14 [1/1] (0.46ns)   --->   "%store_ln0 = store i7 0, i7 %i"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 15 [1/1] (0.46ns)   --->   "%store_ln0 = store i21 0, i21 %sum"   --->   Operation 15 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc47"   --->   Operation 16 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i15 %indvar_flatten" [kernel.cpp:63]   --->   Operation 17 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 18 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.08ns)   --->   "%icmp_ln63 = icmp_eq  i15 %indvar_flatten_load, i15 25600" [kernel.cpp:63]   --->   Operation 19 'icmp' 'icmp_ln63' <Predicate = true> <Delay = 1.08> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (1.08ns)   --->   "%add_ln63 = add i15 %indvar_flatten_load, i15 1" [kernel.cpp:63]   --->   Operation 20 'add' 'add_ln63' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln63 = br i1 %icmp_ln63, void %for.inc52, void %second_chan_loop.exitStub" [kernel.cpp:63]   --->   Operation 21 'br' 'br_ln63' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%i_load = load i7 %i" [kernel.cpp:69]   --->   Operation 22 'load' 'i_load' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%iChan_load = load i9 %iChan" [kernel.cpp:63]   --->   Operation 23 'load' 'iChan_load' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.90ns)   --->   "%iChan_3 = add i9 %iChan_load, i9 1" [kernel.cpp:63]   --->   Operation 24 'add' 'iChan_3' <Predicate = (!icmp_ln63)> <Delay = 0.90> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.85ns)   --->   "%icmp_ln69 = icmp_eq  i7 %i_load, i7 100" [kernel.cpp:69]   --->   Operation 25 'icmp' 'icmp_ln69' <Predicate = (!icmp_ln63)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.37ns)   --->   "%select_ln63 = select i1 %icmp_ln69, i7 0, i7 %i_load" [kernel.cpp:63]   --->   Operation 26 'select' 'select_ln63' <Predicate = (!icmp_ln63)> <Delay = 0.37> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.38ns)   --->   "%select_ln63_2 = select i1 %icmp_ln69, i9 %iChan_3, i9 %iChan_load" [kernel.cpp:63]   --->   Operation 27 'select' 'select_ln63_2' <Predicate = (!icmp_ln63)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%select_ln63_2_cast = zext i9 %select_ln63_2" [kernel.cpp:63]   --->   Operation 28 'zext' 'select_ln63_2_cast' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_1 : Operation 29 [3/3] (1.08ns) (grouped into DSP with root node add_ln71)   --->   "%mul_ln71 = mul i21 %select_ln63_2_cast, i21 6000" [kernel.cpp:63]   --->   Operation 29 'mul' 'mul_ln71' <Predicate = (!icmp_ln63)> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 30 [1/1] (0.85ns)   --->   "%add_ln69 = add i7 %select_ln63, i7 1" [kernel.cpp:69]   --->   Operation 30 'add' 'add_ln69' <Predicate = (!icmp_ln63)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.85ns)   --->   "%ifzero = icmp_eq  i7 %add_ln69, i7 100" [kernel.cpp:69]   --->   Operation 31 'icmp' 'ifzero' <Predicate = (!icmp_ln63)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln69 = br i1 %ifzero, void %ifFalse, void %ifTrue" [kernel.cpp:69]   --->   Operation 32 'br' 'br_ln69' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.46ns)   --->   "%store_ln63 = store i15 %add_ln63, i15 %indvar_flatten" [kernel.cpp:63]   --->   Operation 33 'store' 'store_ln63' <Predicate = (!icmp_ln63)> <Delay = 0.46>
ST_1 : Operation 34 [1/1] (0.46ns)   --->   "%store_ln63 = store i9 %select_ln63_2, i9 %iChan" [kernel.cpp:63]   --->   Operation 34 'store' 'store_ln63' <Predicate = (!icmp_ln63)> <Delay = 0.46>
ST_1 : Operation 35 [1/1] (0.46ns)   --->   "%store_ln69 = store i7 %add_ln69, i7 %i" [kernel.cpp:69]   --->   Operation 35 'store' 'store_ln69' <Predicate = (!icmp_ln63)> <Delay = 0.46>

State 2 <SV = 1> <Delay = 1.08>
ST_2 : Operation 36 [2/3] (1.08ns) (grouped into DSP with root node add_ln71)   --->   "%mul_ln71 = mul i21 %select_ln63_2_cast, i21 6000" [kernel.cpp:63]   --->   Operation 36 'mul' 'mul_ln71' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 0.83>
ST_3 : Operation 37 [1/3] (0.00ns) (grouped into DSP with root node add_ln71)   --->   "%mul_ln71 = mul i21 %select_ln63_2_cast, i21 6000" [kernel.cpp:63]   --->   Operation 37 'mul' 'mul_ln71' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln71 = zext i7 %select_ln63" [kernel.cpp:71]   --->   Operation 38 'zext' 'zext_ln71' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [2/2] (0.83ns) (root node of the DSP)   --->   "%add_ln71 = add i21 %mul_ln71, i21 %zext_ln71" [kernel.cpp:71]   --->   Operation 39 'add' 'add_ln71' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 2.12>
ST_4 : Operation 40 [1/2] (0.83ns) (root node of the DSP)   --->   "%add_ln71 = add i21 %mul_ln71, i21 %zext_ln71" [kernel.cpp:71]   --->   Operation 40 'add' 'add_ln71' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln71_1 = zext i21 %add_ln71" [kernel.cpp:71]   --->   Operation 41 'zext' 'zext_ln71_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%adc_vectors_addr = getelementptr i14 %adc_vectors, i64 0, i64 %zext_ln71_1" [kernel.cpp:71]   --->   Operation 42 'getelementptr' 'adc_vectors_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [2/2] (1.29ns)   --->   "%adc_vectors_load = load i21 %adc_vectors_addr" [kernel.cpp:71]   --->   Operation 43 'load' 'adc_vectors_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 1536000> <RAM>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 62 'ret' 'ret_ln0' <Predicate = (icmp_ln63)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 6.73>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%sum_load = load i21 %sum" [kernel.cpp:63]   --->   Operation 44 'load' 'sum_load' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @first_chan_loop_first_chan_frame_loop_str"   --->   Operation 45 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 46 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 25600, i64 25600, i64 25600"   --->   Operation 46 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node sum_1)   --->   "%select_ln63_1 = select i1 %icmp_ln69, i21 0, i21 %sum_load" [kernel.cpp:63]   --->   Operation 47 'select' 'select_ln63_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i9 %select_ln63_2" [kernel.cpp:63]   --->   Operation 48 'zext' 'zext_ln63' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 49 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%specloopname_ln69 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [kernel.cpp:69]   --->   Operation 50 'specloopname' 'specloopname_ln69' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 51 [1/2] (1.29ns)   --->   "%adc_vectors_load = load i21 %adc_vectors_addr" [kernel.cpp:71]   --->   Operation 51 'load' 'adc_vectors_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 1536000> <RAM>
ST_5 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node sum_1)   --->   "%adc_vectors_load_cast48 = zext i14 %adc_vectors_load" [kernel.cpp:71]   --->   Operation 52 'zext' 'adc_vectors_load_cast48' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (1.12ns) (out node of the LUT)   --->   "%sum_1 = add i21 %adc_vectors_load_cast48, i21 %select_ln63_1" [kernel.cpp:71]   --->   Operation 53 'add' 'sum_1' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i21 %sum_1" [kernel.cpp:73]   --->   Operation 54 'zext' 'zext_ln73' <Predicate = (ifzero)> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (3.01ns)   --->   "%mul_ln73 = mul i43 %zext_ln73, i43 2684355" [kernel.cpp:73]   --->   Operation 55 'mul' 'mul_ln73' <Predicate = (ifzero)> <Delay = 3.01> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.01> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln9 = partselect i14 @_ssdm_op_PartSelect.i14.i43.i32.i32, i43 %mul_ln73, i32 28, i32 41" [kernel.cpp:73]   --->   Operation 56 'partselect' 'trunc_ln9' <Predicate = (ifzero)> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%ave_addr = getelementptr i14 %ave, i64 0, i64 %zext_ln63" [kernel.cpp:73]   --->   Operation 57 'getelementptr' 'ave_addr' <Predicate = (ifzero)> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (1.29ns)   --->   "%store_ln73 = store i14 %trunc_ln9, i8 %ave_addr" [kernel.cpp:73]   --->   Operation 58 'store' 'store_ln73' <Predicate = (ifzero)> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 256> <RAM>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln0 = br void %ifFalse"   --->   Operation 59 'br' 'br_ln0' <Predicate = (ifzero)> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.46ns)   --->   "%store_ln71 = store i21 %sum_1, i21 %sum" [kernel.cpp:71]   --->   Operation 60 'store' 'store_ln71' <Predicate = true> <Delay = 0.46>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc47"   --->   Operation 61 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.945ns
The critical path consists of the following:
	'alloca' operation ('i') [4]  (0.000 ns)
	'load' operation ('i_load', kernel.cpp:69) on local variable 'i' [20]  (0.000 ns)
	'icmp' operation ('icmp_ln69', kernel.cpp:69) [25]  (0.856 ns)
	'select' operation ('select_ln63', kernel.cpp:63) [26]  (0.378 ns)
	'add' operation ('add_ln69', kernel.cpp:69) [41]  (0.856 ns)
	'icmp' operation ('ifzero', kernel.cpp:69) [42]  (0.856 ns)

 <State 2>: 1.088ns
The critical path consists of the following:
	'mul' operation of DSP[34] ('mul_ln71', kernel.cpp:63) [31]  (1.088 ns)

 <State 3>: 0.831ns
The critical path consists of the following:
	'mul' operation of DSP[34] ('mul_ln71', kernel.cpp:63) [31]  (0.000 ns)
	'add' operation of DSP[34] ('add_ln71', kernel.cpp:71) [34]  (0.831 ns)

 <State 4>: 2.128ns
The critical path consists of the following:
	'add' operation of DSP[34] ('add_ln71', kernel.cpp:71) [34]  (0.831 ns)
	'getelementptr' operation ('adc_vectors_addr', kernel.cpp:71) [36]  (0.000 ns)
	'load' operation ('adc_vectors_load', kernel.cpp:71) on array 'adc_vectors' [38]  (1.297 ns)

 <State 5>: 6.735ns
The critical path consists of the following:
	'load' operation ('adc_vectors_load', kernel.cpp:71) on array 'adc_vectors' [38]  (1.297 ns)
	'add' operation ('sum', kernel.cpp:71) [40]  (1.128 ns)
	'mul' operation ('mul_ln73', kernel.cpp:73) [46]  (3.014 ns)
	'store' operation ('store_ln73', kernel.cpp:73) of variable 'trunc_ln9', kernel.cpp:73 on array 'ave' [49]  (1.297 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
