// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module process_data_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_32u_config12_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer11_out_dout,
        layer11_out_num_data_valid,
        layer11_out_fifo_cap,
        layer11_out_empty_n,
        layer11_out_read,
        layer12_out_din,
        layer12_out_num_data_valid,
        layer12_out_fifo_cap,
        layer12_out_full_n,
        layer12_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [1023:0] layer11_out_dout;
input  [8:0] layer11_out_num_data_valid;
input  [8:0] layer11_out_fifo_cap;
input   layer11_out_empty_n;
output   layer11_out_read;
output  [511:0] layer12_out_din;
input  [7:0] layer12_out_num_data_valid;
input  [7:0] layer12_out_fifo_cap;
input   layer12_out_full_n;
output   layer12_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer11_out_read;
reg layer12_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer11_out_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln79_fu_3214_p2;
wire   [15:0] trunc_ln87_fu_3226_p1;
reg   [15:0] trunc_ln87_reg_3939;
reg    ap_block_state2;
reg   [15:0] trunc_ln87_s_reg_3944;
reg   [15:0] trunc_ln87_2_reg_3949;
reg   [15:0] ref_tmp_1_i_reg_3954;
reg   [15:0] ref_tmp_2_i_reg_3959;
reg   [15:0] ref_tmp_3_i_reg_3964;
reg   [15:0] ref_tmp_4_i_reg_3969;
reg   [15:0] ref_tmp_5_i_reg_3974;
reg   [15:0] ref_tmp_6_i_reg_3979;
reg   [15:0] ref_tmp_7_i_reg_3984;
reg   [15:0] ref_tmp_8_i_reg_3989;
reg   [15:0] ref_tmp_9_i_reg_3994;
reg   [15:0] ref_tmp_10_i_reg_3999;
reg   [15:0] ref_tmp_11_i_reg_4004;
reg   [15:0] ref_tmp_12_i_reg_4009;
reg   [15:0] ref_tmp_13_i_reg_4014;
reg   [15:0] ref_tmp_14_i_reg_4019;
reg   [15:0] ref_tmp_15_i_reg_4024;
reg   [15:0] ref_tmp_16_i_reg_4029;
reg   [15:0] ref_tmp_17_i_reg_4034;
reg   [15:0] ref_tmp_18_i_reg_4039;
reg   [15:0] ref_tmp_19_i_reg_4044;
reg   [15:0] ref_tmp_20_i_reg_4049;
reg   [15:0] ref_tmp_21_i_reg_4054;
reg   [15:0] ref_tmp_22_i_reg_4059;
reg   [15:0] ref_tmp_23_i_reg_4064;
reg   [15:0] ref_tmp_24_i_reg_4069;
reg   [15:0] ref_tmp_25_i_reg_4074;
reg   [15:0] ref_tmp_26_i_reg_4079;
reg   [15:0] ref_tmp_27_i_reg_4084;
reg   [15:0] ref_tmp_28_i_reg_4089;
reg   [15:0] ref_tmp_29_i_reg_4094;
reg   [15:0] ref_tmp_30_i_reg_4099;
reg   [15:0] ref_tmp_31_i_reg_4104;
reg   [15:0] ref_tmp_32_i_reg_4109;
reg   [15:0] ref_tmp_33_i_reg_4114;
reg   [15:0] ref_tmp_34_i_reg_4119;
reg   [15:0] ref_tmp_35_i_reg_4124;
reg   [15:0] ref_tmp_36_i_reg_4129;
reg   [15:0] ref_tmp_37_i_reg_4134;
reg   [15:0] ref_tmp_38_i_reg_4139;
reg   [15:0] ref_tmp_39_i_reg_4144;
reg   [15:0] ref_tmp_40_i_reg_4149;
reg   [15:0] ref_tmp_41_i_reg_4154;
reg   [15:0] ref_tmp_42_i_reg_4159;
reg   [15:0] ref_tmp_43_i_reg_4164;
reg   [15:0] ref_tmp_44_i_reg_4169;
reg   [15:0] ref_tmp_45_i_reg_4174;
reg   [15:0] ref_tmp_46_i_reg_4179;
reg   [15:0] ref_tmp_47_i_reg_4184;
reg   [15:0] ref_tmp_48_i_reg_4189;
reg   [15:0] ref_tmp_49_i_reg_4194;
reg   [15:0] ref_tmp_50_i_reg_4199;
reg   [15:0] ref_tmp_51_i_reg_4204;
reg   [15:0] ref_tmp_52_i_reg_4209;
reg   [15:0] ref_tmp_53_i_reg_4214;
reg   [15:0] ref_tmp_54_i_reg_4219;
reg   [15:0] ref_tmp_55_i_reg_4224;
reg   [15:0] ref_tmp_56_i_reg_4229;
reg   [15:0] ref_tmp_57_i_reg_4234;
reg   [15:0] ref_tmp_58_i_reg_4239;
reg   [15:0] ref_tmp_59_i_reg_4244;
reg   [15:0] ref_tmp_60_i_reg_4249;
reg   [15:0] ref_tmp_61_i_reg_4254;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_start;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_done;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_idle;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_ready;
wire   [511:0] grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_layer12_out_din;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_layer12_out_write;
reg    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_start_reg;
reg    ap_block_state2_ignore_call68;
wire    ap_CS_fsm_state3;
reg   [7:0] indvar_flatten_fu_1708;
wire   [7:0] add_ln79_fu_3220_p2;
reg    ap_block_state1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_start_reg = 1'b0;
end

process_data_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_start),
    .ap_done(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_done),
    .ap_idle(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_idle),
    .ap_ready(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_ready),
    .p_read(trunc_ln87_reg_3939),
    .p_read1(ref_tmp_1_i_reg_3954),
    .p_read2(ref_tmp_2_i_reg_3959),
    .p_read3(ref_tmp_3_i_reg_3964),
    .p_read4(ref_tmp_4_i_reg_3969),
    .p_read5(ref_tmp_5_i_reg_3974),
    .p_read6(ref_tmp_6_i_reg_3979),
    .p_read7(ref_tmp_7_i_reg_3984),
    .p_read8(ref_tmp_8_i_reg_3989),
    .p_read9(ref_tmp_9_i_reg_3994),
    .p_read10(ref_tmp_10_i_reg_3999),
    .p_read11(ref_tmp_11_i_reg_4004),
    .p_read12(ref_tmp_12_i_reg_4009),
    .p_read13(ref_tmp_13_i_reg_4014),
    .p_read14(ref_tmp_14_i_reg_4019),
    .p_read15(ref_tmp_15_i_reg_4024),
    .p_read16(ref_tmp_16_i_reg_4029),
    .p_read17(ref_tmp_17_i_reg_4034),
    .p_read18(ref_tmp_18_i_reg_4039),
    .p_read19(ref_tmp_19_i_reg_4044),
    .p_read20(ref_tmp_20_i_reg_4049),
    .p_read21(ref_tmp_21_i_reg_4054),
    .p_read22(ref_tmp_22_i_reg_4059),
    .p_read23(ref_tmp_23_i_reg_4064),
    .p_read24(ref_tmp_24_i_reg_4069),
    .p_read25(ref_tmp_25_i_reg_4074),
    .p_read26(ref_tmp_26_i_reg_4079),
    .p_read27(ref_tmp_27_i_reg_4084),
    .p_read28(ref_tmp_28_i_reg_4089),
    .p_read29(ref_tmp_29_i_reg_4094),
    .p_read30(ref_tmp_30_i_reg_4099),
    .p_read31(ref_tmp_31_i_reg_4104),
    .p_read32(ref_tmp_32_i_reg_4109),
    .p_read33(ref_tmp_33_i_reg_4114),
    .p_read34(ref_tmp_34_i_reg_4119),
    .p_read35(ref_tmp_35_i_reg_4124),
    .p_read36(ref_tmp_36_i_reg_4129),
    .p_read37(ref_tmp_37_i_reg_4134),
    .p_read38(ref_tmp_38_i_reg_4139),
    .p_read39(ref_tmp_39_i_reg_4144),
    .p_read40(ref_tmp_40_i_reg_4149),
    .p_read41(ref_tmp_41_i_reg_4154),
    .p_read42(ref_tmp_42_i_reg_4159),
    .p_read43(ref_tmp_43_i_reg_4164),
    .p_read44(ref_tmp_44_i_reg_4169),
    .p_read45(ref_tmp_45_i_reg_4174),
    .p_read46(ref_tmp_46_i_reg_4179),
    .p_read47(ref_tmp_47_i_reg_4184),
    .p_read48(ref_tmp_48_i_reg_4189),
    .p_read49(ref_tmp_49_i_reg_4194),
    .p_read50(ref_tmp_50_i_reg_4199),
    .p_read51(ref_tmp_51_i_reg_4204),
    .p_read52(ref_tmp_52_i_reg_4209),
    .p_read53(ref_tmp_53_i_reg_4214),
    .p_read54(ref_tmp_54_i_reg_4219),
    .p_read55(ref_tmp_55_i_reg_4224),
    .p_read56(ref_tmp_56_i_reg_4229),
    .p_read57(ref_tmp_57_i_reg_4234),
    .p_read58(ref_tmp_58_i_reg_4239),
    .p_read59(ref_tmp_59_i_reg_4244),
    .p_read60(ref_tmp_60_i_reg_4249),
    .p_read61(ref_tmp_61_i_reg_4254),
    .p_read62(trunc_ln87_s_reg_3944),
    .p_read63(trunc_ln87_2_reg_3949),
    .layer12_out_din(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_layer12_out_din),
    .layer12_out_num_data_valid(8'd0),
    .layer12_out_fifo_cap(8'd0),
    .layer12_out_full_n(layer12_out_full_n),
    .layer12_out_write(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_layer12_out_write)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0)) & (icmp_ln79_fu_3214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0)) & (icmp_ln79_fu_3214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_start_reg <= 1'b1;
        end else if ((grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_ready == 1'b1)) begin
            grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_1708 <= 8'd0;
    end else if ((~((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0)) & (icmp_ln79_fu_3214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_fu_1708 <= add_ln79_fu_3220_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0)) & (icmp_ln79_fu_3214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ref_tmp_10_i_reg_3999 <= {{layer11_out_dout[175:160]}};
        ref_tmp_11_i_reg_4004 <= {{layer11_out_dout[191:176]}};
        ref_tmp_12_i_reg_4009 <= {{layer11_out_dout[207:192]}};
        ref_tmp_13_i_reg_4014 <= {{layer11_out_dout[223:208]}};
        ref_tmp_14_i_reg_4019 <= {{layer11_out_dout[239:224]}};
        ref_tmp_15_i_reg_4024 <= {{layer11_out_dout[255:240]}};
        ref_tmp_16_i_reg_4029 <= {{layer11_out_dout[271:256]}};
        ref_tmp_17_i_reg_4034 <= {{layer11_out_dout[287:272]}};
        ref_tmp_18_i_reg_4039 <= {{layer11_out_dout[303:288]}};
        ref_tmp_19_i_reg_4044 <= {{layer11_out_dout[319:304]}};
        ref_tmp_1_i_reg_3954 <= {{layer11_out_dout[31:16]}};
        ref_tmp_20_i_reg_4049 <= {{layer11_out_dout[335:320]}};
        ref_tmp_21_i_reg_4054 <= {{layer11_out_dout[351:336]}};
        ref_tmp_22_i_reg_4059 <= {{layer11_out_dout[367:352]}};
        ref_tmp_23_i_reg_4064 <= {{layer11_out_dout[383:368]}};
        ref_tmp_24_i_reg_4069 <= {{layer11_out_dout[399:384]}};
        ref_tmp_25_i_reg_4074 <= {{layer11_out_dout[415:400]}};
        ref_tmp_26_i_reg_4079 <= {{layer11_out_dout[431:416]}};
        ref_tmp_27_i_reg_4084 <= {{layer11_out_dout[447:432]}};
        ref_tmp_28_i_reg_4089 <= {{layer11_out_dout[463:448]}};
        ref_tmp_29_i_reg_4094 <= {{layer11_out_dout[479:464]}};
        ref_tmp_2_i_reg_3959 <= {{layer11_out_dout[47:32]}};
        ref_tmp_30_i_reg_4099 <= {{layer11_out_dout[495:480]}};
        ref_tmp_31_i_reg_4104 <= {{layer11_out_dout[511:496]}};
        ref_tmp_32_i_reg_4109 <= {{layer11_out_dout[527:512]}};
        ref_tmp_33_i_reg_4114 <= {{layer11_out_dout[543:528]}};
        ref_tmp_34_i_reg_4119 <= {{layer11_out_dout[559:544]}};
        ref_tmp_35_i_reg_4124 <= {{layer11_out_dout[575:560]}};
        ref_tmp_36_i_reg_4129 <= {{layer11_out_dout[591:576]}};
        ref_tmp_37_i_reg_4134 <= {{layer11_out_dout[607:592]}};
        ref_tmp_38_i_reg_4139 <= {{layer11_out_dout[623:608]}};
        ref_tmp_39_i_reg_4144 <= {{layer11_out_dout[639:624]}};
        ref_tmp_3_i_reg_3964 <= {{layer11_out_dout[63:48]}};
        ref_tmp_40_i_reg_4149 <= {{layer11_out_dout[655:640]}};
        ref_tmp_41_i_reg_4154 <= {{layer11_out_dout[671:656]}};
        ref_tmp_42_i_reg_4159 <= {{layer11_out_dout[687:672]}};
        ref_tmp_43_i_reg_4164 <= {{layer11_out_dout[703:688]}};
        ref_tmp_44_i_reg_4169 <= {{layer11_out_dout[719:704]}};
        ref_tmp_45_i_reg_4174 <= {{layer11_out_dout[735:720]}};
        ref_tmp_46_i_reg_4179 <= {{layer11_out_dout[751:736]}};
        ref_tmp_47_i_reg_4184 <= {{layer11_out_dout[767:752]}};
        ref_tmp_48_i_reg_4189 <= {{layer11_out_dout[783:768]}};
        ref_tmp_49_i_reg_4194 <= {{layer11_out_dout[799:784]}};
        ref_tmp_4_i_reg_3969 <= {{layer11_out_dout[79:64]}};
        ref_tmp_50_i_reg_4199 <= {{layer11_out_dout[815:800]}};
        ref_tmp_51_i_reg_4204 <= {{layer11_out_dout[831:816]}};
        ref_tmp_52_i_reg_4209 <= {{layer11_out_dout[847:832]}};
        ref_tmp_53_i_reg_4214 <= {{layer11_out_dout[863:848]}};
        ref_tmp_54_i_reg_4219 <= {{layer11_out_dout[879:864]}};
        ref_tmp_55_i_reg_4224 <= {{layer11_out_dout[895:880]}};
        ref_tmp_56_i_reg_4229 <= {{layer11_out_dout[911:896]}};
        ref_tmp_57_i_reg_4234 <= {{layer11_out_dout[927:912]}};
        ref_tmp_58_i_reg_4239 <= {{layer11_out_dout[943:928]}};
        ref_tmp_59_i_reg_4244 <= {{layer11_out_dout[959:944]}};
        ref_tmp_5_i_reg_3974 <= {{layer11_out_dout[95:80]}};
        ref_tmp_60_i_reg_4249 <= {{layer11_out_dout[975:960]}};
        ref_tmp_61_i_reg_4254 <= {{layer11_out_dout[991:976]}};
        ref_tmp_6_i_reg_3979 <= {{layer11_out_dout[111:96]}};
        ref_tmp_7_i_reg_3984 <= {{layer11_out_dout[127:112]}};
        ref_tmp_8_i_reg_3989 <= {{layer11_out_dout[143:128]}};
        ref_tmp_9_i_reg_3994 <= {{layer11_out_dout[159:144]}};
        trunc_ln87_2_reg_3949 <= {{layer11_out_dout[1023:1008]}};
        trunc_ln87_reg_3939 <= trunc_ln87_fu_3226_p1;
        trunc_ln87_s_reg_3944 <= {{layer11_out_dout[1007:992]}};
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0)) & (icmp_ln79_fu_3214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0)) & (icmp_ln79_fu_3214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_fu_3214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        layer11_out_blk_n = layer11_out_empty_n;
    end else begin
        layer11_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0)) & (icmp_ln79_fu_3214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        layer11_out_read = 1'b1;
    end else begin
        layer11_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        layer12_out_write = grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_layer12_out_write;
    end else begin
        layer12_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0)) & (icmp_ln79_fu_3214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0)) & (icmp_ln79_fu_3214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln79_fu_3220_p2 = (indvar_flatten_fu_1708 + 8'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_ignore_call68 = ((icmp_ln79_fu_3214_p2 == 1'd0) & (layer11_out_empty_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_start = grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_ap_start_reg;

assign icmp_ln79_fu_3214_p2 = ((indvar_flatten_fu_1708 == 8'd180) ? 1'b1 : 1'b0);

assign layer12_out_din = grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_32u_config12_s_fu_1718_layer12_out_din;

assign start_out = real_start;

assign trunc_ln87_fu_3226_p1 = layer11_out_dout[15:0];

endmodule //process_data_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_32u_config12_s
