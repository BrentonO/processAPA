-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity process_data_process_data_Pipeline_frame_chan_loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    phi_mul : IN STD_LOGIC_VECTOR (17 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_ce0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_we0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_ce0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_we0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_ce0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_we0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_ce0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_we0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_ce0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_we0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_ce0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_we0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_ce0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_we0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_ce0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_we0 : OUT STD_LOGIC;
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of process_data_process_data_Pipeline_frame_chan_loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln66_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal empty_fu_251_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_449 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln1_reg_453 : STD_LOGIC_VECTOR (4 downto 0);
    signal first_bit_position_fu_297_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal first_bit_position_reg_458 : STD_LOGIC_VECTOR (4 downto 0);
    signal adc_words_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal adc_words_ce0 : STD_LOGIC;
    signal adc_words_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal adc_words_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal adc_words_ce1 : STD_LOGIC;
    signal adc_words_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln108_fu_311_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln111_fu_322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln73_1_fu_340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iChan_fu_88 : STD_LOGIC_VECTOR (8 downto 0);
    signal iChan_2_fu_245_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_iChan_1 : STD_LOGIC_VECTOR (8 downto 0);
    signal adc_1_fu_420_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln102_fu_265_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln2_fu_269_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln102_fu_281_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln102_fu_277_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln102_1_fu_287_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln102_fu_291_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal word_index_fu_301_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln111_fu_316_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln73_fu_332_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln73_fu_335_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln104_1_fu_355_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln106_fu_358_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln106_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln106_fu_364_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln104_fu_352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal adc_fu_382_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bits_from_first_word_fu_374_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_102_fu_398_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal bits_from_first_wordcast_fu_402_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln110_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln111_fu_406_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln108_fu_388_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln110_fu_412_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component process_data_process_data_Pipeline_frame_chan_loop_adc_words_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_data_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    adc_words_U : component process_data_process_data_Pipeline_frame_chan_loop_adc_words_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => adc_words_address0,
        ce0 => adc_words_ce0,
        q0 => adc_words_q0,
        address1 => adc_words_address1,
        ce1 => adc_words_ce1,
        q1 => adc_words_q1);

    flow_control_loop_pipe_sequential_init_U : component process_data_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    iChan_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln66_fu_239_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    iChan_fu_88 <= iChan_2_fu_245_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    iChan_fu_88 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln66_fu_239_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_reg_449 <= empty_fu_251_p1;
                    first_bit_position_reg_458(4 downto 1) <= first_bit_position_fu_297_p1(4 downto 1);
                lshr_ln1_reg_453 <= ap_sig_allocacmp_iChan_1(7 downto 3);
            end if;
        end if;
    end process;
    first_bit_position_reg_458(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    adc_1_fu_420_p2 <= (trunc_ln108_fu_388_p1 or select_ln110_fu_412_p3);
    adc_fu_382_p2 <= std_logic_vector(shift_right(unsigned(adc_words_q1),to_integer(unsigned('0' & zext_ln104_fu_352_p1(31-1 downto 0)))));
    adc_words_address0 <= zext_ln111_fu_322_p1(8 - 1 downto 0);
    adc_words_address1 <= zext_ln108_fu_311_p1(8 - 1 downto 0);

    adc_words_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            adc_words_ce0 <= ap_const_logic_1;
        else 
            adc_words_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    adc_words_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            adc_words_ce1 <= ap_const_logic_1;
        else 
            adc_words_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln111_fu_316_p2 <= std_logic_vector(unsigned(word_index_fu_301_p4) + unsigned(ap_const_lv8_1));
    add_ln73_fu_335_p2 <= std_logic_vector(unsigned(phi_mul) + unsigned(zext_ln73_fu_332_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln66_fu_239_p2)
    begin
        if (((icmp_ln66_fu_239_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_iChan_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, iChan_fu_88, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_iChan_1 <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_iChan_1 <= iChan_fu_88;
        end if; 
    end process;

    bits_from_first_word_fu_374_p3 <= 
        ap_const_lv4_E when (icmp_ln106_fu_368_p2(0) = '1') else 
        trunc_ln106_fu_364_p1;
    bits_from_first_wordcast_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bits_from_first_word_fu_374_p3),14));
    empty_102_fu_398_p1 <= adc_words_q0(14 - 1 downto 0);
    empty_fu_251_p1 <= ap_sig_allocacmp_iChan_1(3 - 1 downto 0);
    first_bit_position_fu_297_p1 <= sub_ln102_fu_291_p2(5 - 1 downto 0);
    iChan_2_fu_245_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_iChan_1) + unsigned(ap_const_lv9_1));
    icmp_ln106_fu_368_p2 <= "1" when (unsigned(sub_ln106_fu_358_p2) > unsigned(ap_const_lv6_E)) else "0";
    icmp_ln110_fu_392_p2 <= "1" when (unsigned(bits_from_first_word_fu_374_p3) < unsigned(ap_const_lv4_E)) else "0";
    icmp_ln66_fu_239_p2 <= "1" when (ap_sig_allocacmp_iChan_1 = ap_const_lv9_100) else "0";
    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_address0 <= zext_ln73_1_fu_340_p1(18 - 1 downto 0);

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_ce0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_d0 <= adc_1_fu_420_p2;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, empty_reg_449)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_reg_449 = ap_const_lv3_1))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_we0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_address0 <= zext_ln73_1_fu_340_p1(18 - 1 downto 0);

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_ce0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_d0 <= adc_1_fu_420_p2;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, empty_reg_449)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_reg_449 = ap_const_lv3_2))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_we0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_address0 <= zext_ln73_1_fu_340_p1(18 - 1 downto 0);

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_ce0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_d0 <= adc_1_fu_420_p2;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, empty_reg_449)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_reg_449 = ap_const_lv3_3))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_we0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_address0 <= zext_ln73_1_fu_340_p1(18 - 1 downto 0);

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_ce0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_d0 <= adc_1_fu_420_p2;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, empty_reg_449)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_reg_449 = ap_const_lv3_4))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_we0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_address0 <= zext_ln73_1_fu_340_p1(18 - 1 downto 0);

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_ce0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_d0 <= adc_1_fu_420_p2;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, empty_reg_449)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_reg_449 = ap_const_lv3_5))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_we0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_address0 <= zext_ln73_1_fu_340_p1(18 - 1 downto 0);

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_ce0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_d0 <= adc_1_fu_420_p2;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, empty_reg_449)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_reg_449 = ap_const_lv3_6))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_we0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_address0 <= zext_ln73_1_fu_340_p1(18 - 1 downto 0);

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_ce0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_d0 <= adc_1_fu_420_p2;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, empty_reg_449)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_reg_449 = ap_const_lv3_7))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_we0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_address0 <= zext_ln73_1_fu_340_p1(18 - 1 downto 0);

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_ce0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_d0 <= adc_1_fu_420_p2;

    process_data_int_char_FDHDChannelMapSP_int_adc_vectors_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, empty_reg_449)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_reg_449 = ap_const_lv3_0))) then 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_we0 <= ap_const_logic_1;
        else 
            process_data_int_char_FDHDChannelMapSP_int_adc_vectors_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln110_fu_412_p3 <= 
        shl_ln111_fu_406_p2 when (icmp_ln110_fu_392_p2(0) = '1') else 
        ap_const_lv14_0;
    shl_ln102_fu_281_p2 <= std_logic_vector(shift_left(unsigned(ap_sig_allocacmp_iChan_1),to_integer(unsigned('0' & ap_const_lv9_1(9-1 downto 0)))));
    shl_ln111_fu_406_p2 <= std_logic_vector(shift_left(unsigned(empty_102_fu_398_p1),to_integer(unsigned('0' & bits_from_first_wordcast_fu_402_p1(14-1 downto 0)))));
    shl_ln2_fu_269_p3 <= (trunc_ln102_fu_265_p1 & ap_const_lv4_0);
    sub_ln102_fu_291_p2 <= std_logic_vector(unsigned(zext_ln102_fu_277_p1) - unsigned(zext_ln102_1_fu_287_p1));
    sub_ln106_fu_358_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(zext_ln104_1_fu_355_p1));
    trunc_ln102_fu_265_p1 <= ap_sig_allocacmp_iChan_1(8 - 1 downto 0);
    trunc_ln106_fu_364_p1 <= sub_ln106_fu_358_p2(4 - 1 downto 0);
    trunc_ln108_fu_388_p1 <= adc_fu_382_p2(14 - 1 downto 0);
    word_index_fu_301_p4 <= sub_ln102_fu_291_p2(12 downto 5);
    zext_ln102_1_fu_287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_fu_281_p2),13));
    zext_ln102_fu_277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_269_p3),13));
    zext_ln104_1_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(first_bit_position_reg_458),6));
    zext_ln104_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(first_bit_position_reg_458),32));
    zext_ln108_fu_311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(word_index_fu_301_p4),64));
    zext_ln111_fu_322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln111_fu_316_p2),64));
    zext_ln73_1_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln73_fu_335_p2),64));
    zext_ln73_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_reg_453),18));
end behav;
