// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module process_data_conv_2d_cl_array_ap_fixed_32u_array_ap_fixed_16_6_5_3_0_64u_config6_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer5_out_dout,
        layer5_out_num_data_valid,
        layer5_out_fifo_cap,
        layer5_out_empty_n,
        layer5_out_read,
        layer6_out_din,
        layer6_out_num_data_valid,
        layer6_out_fifo_cap,
        layer6_out_full_n,
        layer6_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [511:0] layer5_out_dout;
input  [12:0] layer5_out_num_data_valid;
input  [12:0] layer5_out_fifo_cap;
input   layer5_out_empty_n;
output   layer5_out_read;
output  [1023:0] layer6_out_din;
input  [12:0] layer6_out_num_data_valid;
input  [12:0] layer6_out_fifo_cap;
input   layer6_out_full_n;
output   layer6_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer5_out_read;
reg layer6_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer5_out_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln79_fu_1646_p2;
wire   [15:0] trunc_ln87_fu_1658_p1;
reg   [15:0] trunc_ln87_reg_2019;
reg    ap_block_state2;
reg   [15:0] trunc_ln87_s_reg_2024;
reg   [15:0] trunc_ln87_3_reg_2029;
reg   [15:0] ref_tmp_1_i_reg_2034;
reg   [15:0] ref_tmp_2_i_reg_2039;
reg   [15:0] ref_tmp_3_i_reg_2044;
reg   [15:0] ref_tmp_4_i_reg_2049;
reg   [15:0] ref_tmp_5_i_reg_2054;
reg   [15:0] ref_tmp_6_i_reg_2059;
reg   [15:0] ref_tmp_7_i_reg_2064;
reg   [15:0] ref_tmp_8_i_reg_2069;
reg   [15:0] ref_tmp_9_i_reg_2074;
reg   [15:0] ref_tmp_10_i_reg_2079;
reg   [15:0] ref_tmp_11_i_reg_2084;
reg   [15:0] ref_tmp_12_i_reg_2089;
reg   [15:0] ref_tmp_13_i_reg_2094;
reg   [15:0] ref_tmp_14_i_reg_2099;
reg   [15:0] ref_tmp_15_i_reg_2104;
reg   [15:0] ref_tmp_16_i_reg_2109;
reg   [15:0] ref_tmp_17_i_reg_2114;
reg   [15:0] ref_tmp_18_i_reg_2119;
reg   [15:0] ref_tmp_19_i_reg_2124;
reg   [15:0] ref_tmp_20_i_reg_2129;
reg   [15:0] ref_tmp_21_i_reg_2134;
reg   [15:0] ref_tmp_22_i_reg_2139;
reg   [15:0] ref_tmp_23_i_reg_2144;
reg   [15:0] ref_tmp_24_i_reg_2149;
reg   [15:0] ref_tmp_25_i_reg_2154;
reg   [15:0] ref_tmp_26_i_reg_2159;
reg   [15:0] ref_tmp_27_i_reg_2164;
reg   [15:0] ref_tmp_28_i_reg_2169;
reg   [15:0] ref_tmp_29_i_reg_2174;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_start;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_done;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_idle;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_ready;
wire   [1023:0] grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_layer6_out_din;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_layer6_out_write;
reg    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_start_reg;
reg    ap_block_state2_ignore_call36;
wire    ap_CS_fsm_state3;
reg   [11:0] indvar_flatten_fu_876;
wire   [11:0] add_ln79_fu_1652_p2;
reg    ap_block_state1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_start_reg = 1'b0;
end

process_data_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_start),
    .ap_done(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_done),
    .ap_idle(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_idle),
    .ap_ready(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_ready),
    .p_read(trunc_ln87_reg_2019),
    .p_read1(ref_tmp_1_i_reg_2034),
    .p_read2(ref_tmp_2_i_reg_2039),
    .p_read3(ref_tmp_3_i_reg_2044),
    .p_read4(ref_tmp_4_i_reg_2049),
    .p_read5(ref_tmp_5_i_reg_2054),
    .p_read6(ref_tmp_6_i_reg_2059),
    .p_read7(ref_tmp_7_i_reg_2064),
    .p_read8(ref_tmp_8_i_reg_2069),
    .p_read9(ref_tmp_9_i_reg_2074),
    .p_read10(ref_tmp_10_i_reg_2079),
    .p_read11(ref_tmp_11_i_reg_2084),
    .p_read12(ref_tmp_12_i_reg_2089),
    .p_read13(ref_tmp_13_i_reg_2094),
    .p_read14(ref_tmp_14_i_reg_2099),
    .p_read15(ref_tmp_15_i_reg_2104),
    .p_read16(ref_tmp_16_i_reg_2109),
    .p_read17(ref_tmp_17_i_reg_2114),
    .p_read18(ref_tmp_18_i_reg_2119),
    .p_read19(ref_tmp_19_i_reg_2124),
    .p_read20(ref_tmp_20_i_reg_2129),
    .p_read21(ref_tmp_21_i_reg_2134),
    .p_read22(ref_tmp_22_i_reg_2139),
    .p_read23(ref_tmp_23_i_reg_2144),
    .p_read24(ref_tmp_24_i_reg_2149),
    .p_read25(ref_tmp_25_i_reg_2154),
    .p_read26(ref_tmp_26_i_reg_2159),
    .p_read27(ref_tmp_27_i_reg_2164),
    .p_read28(ref_tmp_28_i_reg_2169),
    .p_read29(ref_tmp_29_i_reg_2174),
    .p_read30(trunc_ln87_s_reg_2024),
    .p_read31(trunc_ln87_3_reg_2029),
    .layer6_out_din(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_layer6_out_din),
    .layer6_out_num_data_valid(13'd0),
    .layer6_out_fifo_cap(13'd0),
    .layer6_out_full_n(layer6_out_full_n),
    .layer6_out_write(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_layer6_out_write)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0)) & (icmp_ln79_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0)) & (icmp_ln79_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_start_reg <= 1'b1;
        end else if ((grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_ready == 1'b1)) begin
            grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_876 <= 12'd0;
    end else if ((~((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0)) & (icmp_ln79_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_fu_876 <= add_ln79_fu_1652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0)) & (icmp_ln79_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ref_tmp_10_i_reg_2079 <= {{layer5_out_dout[175:160]}};
        ref_tmp_11_i_reg_2084 <= {{layer5_out_dout[191:176]}};
        ref_tmp_12_i_reg_2089 <= {{layer5_out_dout[207:192]}};
        ref_tmp_13_i_reg_2094 <= {{layer5_out_dout[223:208]}};
        ref_tmp_14_i_reg_2099 <= {{layer5_out_dout[239:224]}};
        ref_tmp_15_i_reg_2104 <= {{layer5_out_dout[255:240]}};
        ref_tmp_16_i_reg_2109 <= {{layer5_out_dout[271:256]}};
        ref_tmp_17_i_reg_2114 <= {{layer5_out_dout[287:272]}};
        ref_tmp_18_i_reg_2119 <= {{layer5_out_dout[303:288]}};
        ref_tmp_19_i_reg_2124 <= {{layer5_out_dout[319:304]}};
        ref_tmp_1_i_reg_2034 <= {{layer5_out_dout[31:16]}};
        ref_tmp_20_i_reg_2129 <= {{layer5_out_dout[335:320]}};
        ref_tmp_21_i_reg_2134 <= {{layer5_out_dout[351:336]}};
        ref_tmp_22_i_reg_2139 <= {{layer5_out_dout[367:352]}};
        ref_tmp_23_i_reg_2144 <= {{layer5_out_dout[383:368]}};
        ref_tmp_24_i_reg_2149 <= {{layer5_out_dout[399:384]}};
        ref_tmp_25_i_reg_2154 <= {{layer5_out_dout[415:400]}};
        ref_tmp_26_i_reg_2159 <= {{layer5_out_dout[431:416]}};
        ref_tmp_27_i_reg_2164 <= {{layer5_out_dout[447:432]}};
        ref_tmp_28_i_reg_2169 <= {{layer5_out_dout[463:448]}};
        ref_tmp_29_i_reg_2174 <= {{layer5_out_dout[479:464]}};
        ref_tmp_2_i_reg_2039 <= {{layer5_out_dout[47:32]}};
        ref_tmp_3_i_reg_2044 <= {{layer5_out_dout[63:48]}};
        ref_tmp_4_i_reg_2049 <= {{layer5_out_dout[79:64]}};
        ref_tmp_5_i_reg_2054 <= {{layer5_out_dout[95:80]}};
        ref_tmp_6_i_reg_2059 <= {{layer5_out_dout[111:96]}};
        ref_tmp_7_i_reg_2064 <= {{layer5_out_dout[127:112]}};
        ref_tmp_8_i_reg_2069 <= {{layer5_out_dout[143:128]}};
        ref_tmp_9_i_reg_2074 <= {{layer5_out_dout[159:144]}};
        trunc_ln87_3_reg_2029 <= {{layer5_out_dout[511:496]}};
        trunc_ln87_reg_2019 <= trunc_ln87_fu_1658_p1;
        trunc_ln87_s_reg_2024 <= {{layer5_out_dout[495:480]}};
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0)) & (icmp_ln79_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0)) & (icmp_ln79_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        layer5_out_blk_n = layer5_out_empty_n;
    end else begin
        layer5_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0)) & (icmp_ln79_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        layer5_out_read = 1'b1;
    end else begin
        layer5_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        layer6_out_write = grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_layer6_out_write;
    end else begin
        layer6_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0)) & (icmp_ln79_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0)) & (icmp_ln79_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln79_fu_1652_p2 = (indvar_flatten_fu_876 + 12'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_ignore_call36 = ((icmp_ln79_fu_1646_p2 == 1'd0) & (layer5_out_empty_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_start = grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_ap_start_reg;

assign icmp_ln79_fu_1646_p2 = ((indvar_flatten_fu_876 == 12'd3937) ? 1'b1 : 1'b0);

assign layer6_out_din = grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_64u_config6_s_fu_886_layer6_out_din;

assign start_out = real_start;

assign trunc_ln87_fu_1658_p1 = layer5_out_dout[15:0];

endmodule //process_data_conv_2d_cl_array_ap_fixed_32u_array_ap_fixed_16_6_5_3_0_64u_config6_s
