// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="process_data_process_data,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=9830360,HLS_SYN_TPT=none,HLS_SYN_MEM=2603,HLS_SYN_DSP=0,HLS_SYN_FF=179917,HLS_SYN_LUT=133628,HLS_VERSION=2023_1}" *)

module process_data (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 75'd1;
parameter    ap_ST_fsm_state2 = 75'd2;
parameter    ap_ST_fsm_state3 = 75'd4;
parameter    ap_ST_fsm_state4 = 75'd8;
parameter    ap_ST_fsm_state5 = 75'd16;
parameter    ap_ST_fsm_state6 = 75'd32;
parameter    ap_ST_fsm_state7 = 75'd64;
parameter    ap_ST_fsm_state8 = 75'd128;
parameter    ap_ST_fsm_state9 = 75'd256;
parameter    ap_ST_fsm_state10 = 75'd512;
parameter    ap_ST_fsm_state11 = 75'd1024;
parameter    ap_ST_fsm_state12 = 75'd2048;
parameter    ap_ST_fsm_state13 = 75'd4096;
parameter    ap_ST_fsm_state14 = 75'd8192;
parameter    ap_ST_fsm_state15 = 75'd16384;
parameter    ap_ST_fsm_state16 = 75'd32768;
parameter    ap_ST_fsm_state17 = 75'd65536;
parameter    ap_ST_fsm_state18 = 75'd131072;
parameter    ap_ST_fsm_state19 = 75'd262144;
parameter    ap_ST_fsm_state20 = 75'd524288;
parameter    ap_ST_fsm_state21 = 75'd1048576;
parameter    ap_ST_fsm_state22 = 75'd2097152;
parameter    ap_ST_fsm_state23 = 75'd4194304;
parameter    ap_ST_fsm_state24 = 75'd8388608;
parameter    ap_ST_fsm_state25 = 75'd16777216;
parameter    ap_ST_fsm_state26 = 75'd33554432;
parameter    ap_ST_fsm_state27 = 75'd67108864;
parameter    ap_ST_fsm_state28 = 75'd134217728;
parameter    ap_ST_fsm_state29 = 75'd268435456;
parameter    ap_ST_fsm_state30 = 75'd536870912;
parameter    ap_ST_fsm_state31 = 75'd1073741824;
parameter    ap_ST_fsm_state32 = 75'd2147483648;
parameter    ap_ST_fsm_state33 = 75'd4294967296;
parameter    ap_ST_fsm_state34 = 75'd8589934592;
parameter    ap_ST_fsm_state35 = 75'd17179869184;
parameter    ap_ST_fsm_state36 = 75'd34359738368;
parameter    ap_ST_fsm_state37 = 75'd68719476736;
parameter    ap_ST_fsm_state38 = 75'd137438953472;
parameter    ap_ST_fsm_state39 = 75'd274877906944;
parameter    ap_ST_fsm_state40 = 75'd549755813888;
parameter    ap_ST_fsm_state41 = 75'd1099511627776;
parameter    ap_ST_fsm_state42 = 75'd2199023255552;
parameter    ap_ST_fsm_state43 = 75'd4398046511104;
parameter    ap_ST_fsm_state44 = 75'd8796093022208;
parameter    ap_ST_fsm_state45 = 75'd17592186044416;
parameter    ap_ST_fsm_state46 = 75'd35184372088832;
parameter    ap_ST_fsm_state47 = 75'd70368744177664;
parameter    ap_ST_fsm_state48 = 75'd140737488355328;
parameter    ap_ST_fsm_state49 = 75'd281474976710656;
parameter    ap_ST_fsm_state50 = 75'd562949953421312;
parameter    ap_ST_fsm_state51 = 75'd1125899906842624;
parameter    ap_ST_fsm_state52 = 75'd2251799813685248;
parameter    ap_ST_fsm_state53 = 75'd4503599627370496;
parameter    ap_ST_fsm_state54 = 75'd9007199254740992;
parameter    ap_ST_fsm_state55 = 75'd18014398509481984;
parameter    ap_ST_fsm_state56 = 75'd36028797018963968;
parameter    ap_ST_fsm_state57 = 75'd72057594037927936;
parameter    ap_ST_fsm_state58 = 75'd144115188075855872;
parameter    ap_ST_fsm_state59 = 75'd288230376151711744;
parameter    ap_ST_fsm_state60 = 75'd576460752303423488;
parameter    ap_ST_fsm_state61 = 75'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 75'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 75'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 75'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 75'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 75'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 75'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 75'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 75'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 75'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 75'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 75'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 75'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 75'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 75'd18889465931478580854784;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] infile_size;
wire   [63:0] infiledata;
wire   [63:0] outdata;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state5;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state75;
reg   [15:0] trunc_ln193_2_reg_11331;
wire    ap_CS_fsm_state4;
wire   [47:0] layer19_out_dout;
wire    layer19_out_empty_n;
reg    layer19_out_read;
reg   [61:0] trunc_ln3_reg_11336;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [63:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
wire    gmem_ARREADY;
wire    gmem_RVALID;
wire   [31:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg    gmem_BREADY;
reg   [1:0] cc_prob_address0;
reg    cc_prob_ce0;
reg    cc_prob_we0;
reg   [15:0] cc_prob_d0;
wire   [15:0] cc_prob_q0;
wire   [1:0] cc_prob_address1;
reg    cc_prob_ce1;
reg    cc_prob_we1;
wire   [15:0] cc_prob_d1;
wire    grp_myproject_fu_5715_zero_padding2d_input_read;
wire   [47:0] grp_myproject_fu_5715_layer19_out_din;
wire    grp_myproject_fu_5715_layer19_out_write;
wire    grp_myproject_fu_5715_ap_start;
wire    grp_myproject_fu_5715_ap_done;
wire    grp_myproject_fu_5715_ap_ready;
wire    grp_myproject_fu_5715_ap_idle;
reg    grp_myproject_fu_5715_ap_continue;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_start;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_done;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_idle;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_ready;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWVALID;
wire   [63:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWADDR;
wire   [0:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWID;
wire   [31:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWLEN;
wire   [2:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWSIZE;
wire   [1:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWBURST;
wire   [1:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWLOCK;
wire   [3:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWCACHE;
wire   [2:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWPROT;
wire   [3:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWQOS;
wire   [3:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWREGION;
wire   [0:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWUSER;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WVALID;
wire   [31:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WDATA;
wire   [3:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WSTRB;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WLAST;
wire   [0:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WID;
wire   [0:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WUSER;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARVALID;
wire   [63:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARADDR;
wire   [0:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARID;
wire   [31:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARLEN;
wire   [2:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARSIZE;
wire   [1:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARBURST;
wire   [1:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARLOCK;
wire   [3:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARCACHE;
wire   [2:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARPROT;
wire   [3:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARQOS;
wire   [3:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARREGION;
wire   [0:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARUSER;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_RREADY;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_BREADY;
wire   [1:0] grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_cc_prob_address0;
wire    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_cc_prob_ce0;
reg    grp_myproject_fu_5715_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_sync_grp_myproject_fu_5715_ap_ready;
wire    ap_sync_grp_myproject_fu_5715_ap_done;
reg    ap_block_state3_on_subcall_done;
reg    ap_sync_reg_grp_myproject_fu_5715_ap_ready;
reg    ap_sync_reg_grp_myproject_fu_5715_ap_done;
wire   [14:0] zero_padding2d_input_dout;
wire    zero_padding2d_input_empty_n;
reg    zero_padding2d_input_read;
wire    layer19_out_full_n;
reg    layer19_out_write;
reg    grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire  signed [63:0] sext_ln195_fu_11309_p1;
wire    zero_padding2d_input_full_n;
reg    zero_padding2d_input_write;
reg    ap_block_state1;
reg   [74:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
reg    ap_ST_fsm_state75_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 75'd1;
#0 grp_myproject_fu_5715_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_myproject_fu_5715_ap_ready = 1'b0;
#0 ap_sync_reg_grp_myproject_fu_5715_ap_done = 1'b0;
#0 grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_start_reg = 1'b0;
end

process_data_cc_prob_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
cc_prob_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(cc_prob_address0),
    .ce0(cc_prob_ce0),
    .we0(cc_prob_we0),
    .d0(cc_prob_d0),
    .q0(cc_prob_q0),
    .address1(cc_prob_address1),
    .ce1(cc_prob_ce1),
    .we1(cc_prob_we1),
    .d1(cc_prob_d1)
);

process_data_myproject grp_myproject_fu_5715(
    .zero_padding2d_input_dout(zero_padding2d_input_dout),
    .zero_padding2d_input_empty_n(zero_padding2d_input_empty_n),
    .zero_padding2d_input_read(grp_myproject_fu_5715_zero_padding2d_input_read),
    .layer19_out_din(grp_myproject_fu_5715_layer19_out_din),
    .layer19_out_full_n(layer19_out_full_n),
    .layer19_out_write(grp_myproject_fu_5715_layer19_out_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_myproject_fu_5715_ap_start),
    .ap_done(grp_myproject_fu_5715_ap_done),
    .ap_ready(grp_myproject_fu_5715_ap_ready),
    .ap_idle(grp_myproject_fu_5715_ap_idle),
    .ap_continue(grp_myproject_fu_5715_ap_continue)
);

process_data_process_data_Pipeline_VITIS_LOOP_195_1 grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_start),
    .ap_done(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_done),
    .ap_idle(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_idle),
    .ap_ready(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_ready),
    .m_axi_gmem_AWVALID(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(32'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(9'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .sext_ln195(trunc_ln3_reg_11336),
    .cc_prob_address0(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_cc_prob_address0),
    .cc_prob_ce0(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_cc_prob_ce0),
    .cc_prob_q0(cc_prob_q0)
);

process_data_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .infile_size(infile_size),
    .infiledata(infiledata),
    .outdata(outdata),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

process_data_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWLEN(gmem_AWLEN),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WDATA),
    .I_WSTRB(grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY)
);

process_data_fifo_w15_d2_S zero_padding2d_input_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(15'd4),
    .if_full_n(zero_padding2d_input_full_n),
    .if_write(zero_padding2d_input_write),
    .if_dout(zero_padding2d_input_dout),
    .if_empty_n(zero_padding2d_input_empty_n),
    .if_read(zero_padding2d_input_read)
);

process_data_fifo_w48_d2_S layer19_out_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_myproject_fu_5715_layer19_out_din),
    .if_full_n(layer19_out_full_n),
    .if_write(layer19_out_write),
    .if_dout(layer19_out_dout),
    .if_empty_n(layer19_out_empty_n),
    .if_read(layer19_out_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_myproject_fu_5715_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_sync_reg_grp_myproject_fu_5715_ap_done <= 1'b0;
        end else if ((grp_myproject_fu_5715_ap_done == 1'b1)) begin
            ap_sync_reg_grp_myproject_fu_5715_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_myproject_fu_5715_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_sync_reg_grp_myproject_fu_5715_ap_ready <= 1'b0;
        end else if ((grp_myproject_fu_5715_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_myproject_fu_5715_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_myproject_fu_5715_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) | ((ap_sync_grp_myproject_fu_5715_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_myproject_fu_5715_ap_start_reg <= 1'b1;
        end else if ((grp_myproject_fu_5715_ap_ready == 1'b1)) begin
            grp_myproject_fu_5715_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_start_reg <= 1'b1;
        end else if ((grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_ready == 1'b1)) begin
            grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (layer19_out_empty_n == 1'b1))) begin
        trunc_ln193_2_reg_11331 <= {{layer19_out_dout[47:32]}};
        trunc_ln3_reg_11336 <= {{outdata[63:2]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (zero_padding2d_input_full_n == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

always @ (*) begin
    if ((layer19_out_empty_n == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

always @ (*) begin
    if ((gmem_AWREADY == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

always @ (*) begin
    if ((gmem_BVALID == 1'b0)) begin
        ap_ST_fsm_state75_blk = 1'b1;
    end else begin
        ap_ST_fsm_state75_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cc_prob_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        cc_prob_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        cc_prob_address0 = grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_cc_prob_address0;
    end else begin
        cc_prob_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (layer19_out_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state5) & (gmem_AWREADY == 1'b1)))) begin
        cc_prob_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        cc_prob_ce0 = grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_cc_prob_ce0;
    end else begin
        cc_prob_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (layer19_out_empty_n == 1'b1))) begin
        cc_prob_ce1 = 1'b1;
    end else begin
        cc_prob_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cc_prob_d0 = trunc_ln193_2_reg_11331;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        cc_prob_d0 = {{layer19_out_dout[31:16]}};
    end else begin
        cc_prob_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (layer19_out_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state5) & (gmem_AWREADY == 1'b1)))) begin
        cc_prob_we0 = 1'b1;
    end else begin
        cc_prob_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (layer19_out_empty_n == 1'b1))) begin
        cc_prob_we1 = 1'b1;
    end else begin
        cc_prob_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (gmem_AWREADY == 1'b1))) begin
        gmem_AWADDR = sext_ln195_fu_11309_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWADDR = grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWADDR;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (gmem_AWREADY == 1'b1))) begin
        gmem_AWLEN = 32'd3;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWLEN = grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWLEN;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (gmem_AWREADY == 1'b1))) begin
        gmem_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWVALID = grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_AWVALID;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
        gmem_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_BREADY = grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_BREADY;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_WVALID = grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_m_axi_gmem_WVALID;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_myproject_fu_5715_ap_continue = 1'b1;
    end else begin
        grp_myproject_fu_5715_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (layer19_out_empty_n == 1'b1))) begin
        layer19_out_read = 1'b1;
    end else begin
        layer19_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        layer19_out_write = grp_myproject_fu_5715_layer19_out_write;
    end else begin
        layer19_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zero_padding2d_input_read = grp_myproject_fu_5715_zero_padding2d_input_read;
    end else begin
        zero_padding2d_input_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (zero_padding2d_input_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        zero_padding2d_input_write = 1'b1;
    end else begin
        zero_padding2d_input_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (zero_padding2d_input_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (layer19_out_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (gmem_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (zero_padding2d_input_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_on_subcall_done = ((ap_sync_grp_myproject_fu_5715_ap_ready & ap_sync_grp_myproject_fu_5715_ap_done) == 1'b0);
end

assign ap_sync_grp_myproject_fu_5715_ap_done = (grp_myproject_fu_5715_ap_done | ap_sync_reg_grp_myproject_fu_5715_ap_done);

assign ap_sync_grp_myproject_fu_5715_ap_ready = (grp_myproject_fu_5715_ap_ready | ap_sync_reg_grp_myproject_fu_5715_ap_ready);

assign cc_prob_address1 = 64'd0;

assign cc_prob_d1 = layer19_out_dout[15:0];

assign grp_myproject_fu_5715_ap_start = grp_myproject_fu_5715_ap_start_reg;

assign grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_start = grp_process_data_Pipeline_VITIS_LOOP_195_1_fu_11265_ap_start_reg;

assign sext_ln195_fu_11309_p1 = $signed(trunc_ln3_reg_11336);

endmodule //process_data
