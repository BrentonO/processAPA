<VitisHLS:BurstInfo>
    <burst group="BURST_VERBOSE_PASSED" fe_name="BurstInferredPassed" src_info="kernel.cpp:164:39" msg_id="214-116" msg_severity="INFO" msg_body="Sequential write of length 3 has been inferred" BundleName="gmem" VarName="outdata" LoopLoc="kernel.cpp:164:39" LoopName="VITIS_LOOP_164_6" ParentFunc="process_data(int, char*, int*)" Length="3" Direction="write" AccessID="outdata6seq" OrigID="for.inc154.store.4" OrigAccess-DebugLoc="kernel.cpp:166:33" OrigDirection="write"/>
    <burst group="BURST_VERBOSE_WIDEN_MISSED" fe_name="BadAccessLenMissed" src_info="kernel.cpp:164:39" msg_id="214-234" msg_severity="INFO" msg_body="Sequential access length is not divisible by 2" resolution="214-234" BundleName="gmem" VarName="outdata" LoopLoc="kernel.cpp:164:39" LoopName="VITIS_LOOP_164_6" ParentFunc="process_data(int, char*, int*)" OrigID="outdata6seq" OrigAccess-DebugLoc="kernel.cpp:164:39" OrigDirection="write"/>
    <burst group="BURST_SUMMARY" fe_name="BurstInferredSummaryPassed" src_info="kernel.cpp:164:39" msg_id="214-115" msg_severity="INFO" msg_body="Multiple burst writes of length 3 and bit width 32 in loop 'VITIS_LOOP_164_6' has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings." BundleName="gmem" LoopLoc="kernel.cpp:164:39" LoopName="VITIS_LOOP_164_6" Length="3" Width="32" Direction="write"/>
</VitisHLS:BurstInfo>

