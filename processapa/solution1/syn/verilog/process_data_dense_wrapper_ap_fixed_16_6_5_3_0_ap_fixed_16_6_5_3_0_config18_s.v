// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module process_data_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config18_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val1,
        data_1_val2,
        data_2_val3,
        data_3_val4,
        data_4_val5,
        data_5_val6,
        data_6_val7,
        data_7_val8,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_0_val1;
input  [15:0] data_1_val2;
input  [15:0] data_2_val3;
input  [15:0] data_3_val4;
input  [15:0] data_4_val5;
input  [15:0] data_5_val6;
input  [15:0] data_6_val7;
input  [15:0] data_7_val8;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln43_fu_437_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] w18_address0;
reg    w18_ce0;
wire   [42:0] w18_q0;
reg   [0:0] do_init_reg_145;
reg   [2:0] w_index3_reg_161;
reg   [15:0] data_0_val113_rewind_reg_176;
reg   [15:0] data_1_val214_rewind_reg_190;
reg   [15:0] data_2_val315_rewind_reg_204;
reg   [15:0] data_3_val416_rewind_reg_218;
reg   [15:0] data_4_val517_rewind_reg_232;
reg   [15:0] data_5_val618_rewind_reg_246;
reg   [15:0] data_6_val719_rewind_reg_260;
reg   [15:0] data_7_val820_rewind_reg_274;
reg   [15:0] res_0_08_reg_288;
reg   [15:0] res_1_06_reg_302;
reg   [15:0] res_2_04_reg_316;
reg   [0:0] ap_phi_mux_do_init_phi_fu_149_p6;
wire   [2:0] w_index_fu_431_p2;
reg   [2:0] w_index_reg_638;
reg   [0:0] icmp_ln43_reg_643;
wire   [15:0] add_ln55_fu_493_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [15:0] add_ln55_1_fu_529_p2;
wire   [15:0] add_ln55_2_fu_565_p2;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_w_index3_phi_fu_165_p6;
reg   [15:0] ap_phi_mux_data_0_val113_phi_phi_fu_334_p4;
reg   [15:0] ap_phi_mux_data_1_val214_phi_phi_fu_346_p4;
reg   [15:0] ap_phi_mux_data_2_val315_phi_phi_fu_358_p4;
reg   [15:0] ap_phi_mux_data_3_val416_phi_phi_fu_370_p4;
reg   [15:0] ap_phi_mux_data_4_val517_phi_phi_fu_382_p4;
reg   [15:0] ap_phi_mux_data_5_val618_phi_phi_fu_394_p4;
reg   [15:0] ap_phi_mux_data_6_val719_phi_phi_fu_406_p4;
reg   [15:0] ap_phi_mux_data_7_val820_phi_phi_fu_418_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_data_0_val113_phi_reg_330;
reg   [15:0] ap_phi_reg_pp0_iter1_data_0_val113_phi_reg_330;
wire   [15:0] ap_phi_reg_pp0_iter0_data_1_val214_phi_reg_342;
reg   [15:0] ap_phi_reg_pp0_iter1_data_1_val214_phi_reg_342;
wire   [15:0] ap_phi_reg_pp0_iter0_data_2_val315_phi_reg_354;
reg   [15:0] ap_phi_reg_pp0_iter1_data_2_val315_phi_reg_354;
wire   [15:0] ap_phi_reg_pp0_iter0_data_3_val416_phi_reg_366;
reg   [15:0] ap_phi_reg_pp0_iter1_data_3_val416_phi_reg_366;
wire   [15:0] ap_phi_reg_pp0_iter0_data_4_val517_phi_reg_378;
reg   [15:0] ap_phi_reg_pp0_iter1_data_4_val517_phi_reg_378;
wire   [15:0] ap_phi_reg_pp0_iter0_data_5_val618_phi_reg_390;
reg   [15:0] ap_phi_reg_pp0_iter1_data_5_val618_phi_reg_390;
wire   [15:0] ap_phi_reg_pp0_iter0_data_6_val719_phi_reg_402;
reg   [15:0] ap_phi_reg_pp0_iter1_data_6_val719_phi_reg_402;
wire   [15:0] ap_phi_reg_pp0_iter0_data_7_val820_phi_reg_414;
reg   [15:0] ap_phi_reg_pp0_iter1_data_7_val820_phi_reg_414;
wire   [63:0] zext_ln43_fu_426_p1;
wire  signed [15:0] w_fu_465_p1;
wire   [15:0] a_fu_443_p10;
wire  signed [15:0] mul_ln55_fu_477_p1;
wire  signed [25:0] sext_ln73_1_fu_473_p1;
wire   [25:0] mul_ln55_fu_477_p2;
wire   [15:0] trunc_ln5_fu_483_p4;
wire  signed [15:0] w_1_fu_499_p4;
wire  signed [15:0] mul_ln55_1_fu_513_p1;
wire   [25:0] mul_ln55_1_fu_513_p2;
wire   [15:0] trunc_ln55_1_fu_519_p4;
wire  signed [10:0] tmp_fu_535_p4;
wire  signed [15:0] mul_ln55_2_fu_549_p0;
wire   [25:0] mul_ln55_2_fu_549_p2;
wire   [15:0] trunc_ln55_2_fu_555_p4;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_151;
reg    ap_condition_39;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
#0 ap_return_2_preg = 16'd0;
end

process_data_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config18_s_w18_ROM_AUTOjAb #(
    .DataWidth( 43 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
w18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w18_address0),
    .ce0(w18_ce0),
    .q0(w18_q0)
);

process_data_mux_8_3_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_8_3_16_1_1_U5460(
    .din0(ap_phi_mux_data_0_val113_phi_phi_fu_334_p4),
    .din1(ap_phi_mux_data_1_val214_phi_phi_fu_346_p4),
    .din2(ap_phi_mux_data_2_val315_phi_phi_fu_358_p4),
    .din3(ap_phi_mux_data_3_val416_phi_phi_fu_370_p4),
    .din4(ap_phi_mux_data_4_val517_phi_phi_fu_382_p4),
    .din5(ap_phi_mux_data_5_val618_phi_phi_fu_394_p4),
    .din6(ap_phi_mux_data_6_val719_phi_phi_fu_406_p4),
    .din7(ap_phi_mux_data_7_val820_phi_phi_fu_418_p4),
    .din8(w_index3_reg_161),
    .dout(a_fu_443_p10)
);

process_data_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
mul_16s_16s_26_1_1_U5461(
    .din0(w_fu_465_p1),
    .din1(mul_ln55_fu_477_p1),
    .dout(mul_ln55_fu_477_p2)
);

process_data_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
mul_16s_16s_26_1_1_U5462(
    .din0(w_1_fu_499_p4),
    .din1(mul_ln55_1_fu_513_p1),
    .dout(mul_ln55_1_fu_513_p2)
);

process_data_mul_16s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_16s_11s_26_1_1_U5463(
    .din0(mul_ln55_2_fu_549_p0),
    .din1(tmp_fu_535_p4),
    .dout(mul_ln55_2_fu_549_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1))) begin
            ap_return_0_preg <= add_ln55_fu_493_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1))) begin
            ap_return_1_preg <= add_ln55_1_fu_529_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1))) begin
            ap_return_2_preg <= add_ln55_2_fu_565_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_39)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_0_val113_phi_reg_330 <= data_0_val1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_0_val113_phi_reg_330 <= ap_phi_reg_pp0_iter0_data_0_val113_phi_reg_330;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_39)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_1_val214_phi_reg_342 <= data_1_val2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_1_val214_phi_reg_342 <= ap_phi_reg_pp0_iter0_data_1_val214_phi_reg_342;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_39)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_2_val315_phi_reg_354 <= data_2_val3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_2_val315_phi_reg_354 <= ap_phi_reg_pp0_iter0_data_2_val315_phi_reg_354;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_39)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_3_val416_phi_reg_366 <= data_3_val4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_3_val416_phi_reg_366 <= ap_phi_reg_pp0_iter0_data_3_val416_phi_reg_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_39)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_4_val517_phi_reg_378 <= data_4_val5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_4_val517_phi_reg_378 <= ap_phi_reg_pp0_iter0_data_4_val517_phi_reg_378;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_39)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_5_val618_phi_reg_390 <= data_5_val6;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_5_val618_phi_reg_390 <= ap_phi_reg_pp0_iter0_data_5_val618_phi_reg_390;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_39)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_6_val719_phi_reg_402 <= data_6_val7;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_6_val719_phi_reg_402 <= ap_phi_reg_pp0_iter0_data_6_val719_phi_reg_402;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_39)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_7_val820_phi_reg_414 <= data_7_val8;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_7_val820_phi_reg_414 <= ap_phi_reg_pp0_iter0_data_7_val820_phi_reg_414;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd0))) begin
        do_init_reg_145 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_145 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd0))) begin
        res_0_08_reg_288 <= add_ln55_fu_493_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_0_08_reg_288 <= 16'd65509;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd0))) begin
        res_1_06_reg_302 <= add_ln55_1_fu_529_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_1_06_reg_302 <= 16'd65511;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd0))) begin
        res_2_04_reg_316 <= add_ln55_2_fu_565_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_2_04_reg_316 <= 16'd27;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd0))) begin
        w_index3_reg_161 <= w_index_reg_638;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index3_reg_161 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd0))) begin
        data_0_val113_rewind_reg_176 <= ap_phi_mux_data_0_val113_phi_phi_fu_334_p4;
        data_1_val214_rewind_reg_190 <= ap_phi_mux_data_1_val214_phi_phi_fu_346_p4;
        data_2_val315_rewind_reg_204 <= ap_phi_mux_data_2_val315_phi_phi_fu_358_p4;
        data_3_val416_rewind_reg_218 <= ap_phi_mux_data_3_val416_phi_phi_fu_370_p4;
        data_4_val517_rewind_reg_232 <= ap_phi_mux_data_4_val517_phi_phi_fu_382_p4;
        data_5_val618_rewind_reg_246 <= ap_phi_mux_data_5_val618_phi_phi_fu_394_p4;
        data_6_val719_rewind_reg_260 <= ap_phi_mux_data_6_val719_phi_phi_fu_406_p4;
        data_7_val820_rewind_reg_274 <= ap_phi_mux_data_7_val820_phi_phi_fu_418_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln43_reg_643 <= icmp_ln43_fu_437_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_638 <= w_index_fu_431_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((do_init_reg_145 == 1'd0)) begin
        ap_phi_mux_data_0_val113_phi_phi_fu_334_p4 = data_0_val113_rewind_reg_176;
    end else begin
        ap_phi_mux_data_0_val113_phi_phi_fu_334_p4 = ap_phi_reg_pp0_iter1_data_0_val113_phi_reg_330;
    end
end

always @ (*) begin
    if ((do_init_reg_145 == 1'd0)) begin
        ap_phi_mux_data_1_val214_phi_phi_fu_346_p4 = data_1_val214_rewind_reg_190;
    end else begin
        ap_phi_mux_data_1_val214_phi_phi_fu_346_p4 = ap_phi_reg_pp0_iter1_data_1_val214_phi_reg_342;
    end
end

always @ (*) begin
    if ((do_init_reg_145 == 1'd0)) begin
        ap_phi_mux_data_2_val315_phi_phi_fu_358_p4 = data_2_val315_rewind_reg_204;
    end else begin
        ap_phi_mux_data_2_val315_phi_phi_fu_358_p4 = ap_phi_reg_pp0_iter1_data_2_val315_phi_reg_354;
    end
end

always @ (*) begin
    if ((do_init_reg_145 == 1'd0)) begin
        ap_phi_mux_data_3_val416_phi_phi_fu_370_p4 = data_3_val416_rewind_reg_218;
    end else begin
        ap_phi_mux_data_3_val416_phi_phi_fu_370_p4 = ap_phi_reg_pp0_iter1_data_3_val416_phi_reg_366;
    end
end

always @ (*) begin
    if ((do_init_reg_145 == 1'd0)) begin
        ap_phi_mux_data_4_val517_phi_phi_fu_382_p4 = data_4_val517_rewind_reg_232;
    end else begin
        ap_phi_mux_data_4_val517_phi_phi_fu_382_p4 = ap_phi_reg_pp0_iter1_data_4_val517_phi_reg_378;
    end
end

always @ (*) begin
    if ((do_init_reg_145 == 1'd0)) begin
        ap_phi_mux_data_5_val618_phi_phi_fu_394_p4 = data_5_val618_rewind_reg_246;
    end else begin
        ap_phi_mux_data_5_val618_phi_phi_fu_394_p4 = ap_phi_reg_pp0_iter1_data_5_val618_phi_reg_390;
    end
end

always @ (*) begin
    if ((do_init_reg_145 == 1'd0)) begin
        ap_phi_mux_data_6_val719_phi_phi_fu_406_p4 = data_6_val719_rewind_reg_260;
    end else begin
        ap_phi_mux_data_6_val719_phi_phi_fu_406_p4 = ap_phi_reg_pp0_iter1_data_6_val719_phi_reg_402;
    end
end

always @ (*) begin
    if ((do_init_reg_145 == 1'd0)) begin
        ap_phi_mux_data_7_val820_phi_phi_fu_418_p4 = data_7_val820_rewind_reg_274;
    end else begin
        ap_phi_mux_data_7_val820_phi_phi_fu_418_p4 = ap_phi_reg_pp0_iter1_data_7_val820_phi_reg_414;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_151)) begin
        if ((icmp_ln43_reg_643 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_149_p6 = 1'd1;
        end else if ((icmp_ln43_reg_643 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_149_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_149_p6 = do_init_reg_145;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_149_p6 = do_init_reg_145;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_151)) begin
        if ((icmp_ln43_reg_643 == 1'd1)) begin
            ap_phi_mux_w_index3_phi_fu_165_p6 = 3'd0;
        end else if ((icmp_ln43_reg_643 == 1'd0)) begin
            ap_phi_mux_w_index3_phi_fu_165_p6 = w_index_reg_638;
        end else begin
            ap_phi_mux_w_index3_phi_fu_165_p6 = w_index3_reg_161;
        end
    end else begin
        ap_phi_mux_w_index3_phi_fu_165_p6 = w_index3_reg_161;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln43_fu_437_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1))) begin
        ap_return_0 = add_ln55_fu_493_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1))) begin
        ap_return_1 = add_ln55_1_fu_529_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_643 == 1'd1))) begin
        ap_return_2 = add_ln55_2_fu_565_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w18_ce0 = 1'b1;
    end else begin
        w18_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln55_1_fu_529_p2 = (trunc_ln55_1_fu_519_p4 + res_1_06_reg_302);

assign add_ln55_2_fu_565_p2 = (trunc_ln55_2_fu_555_p4 + res_2_04_reg_316);

assign add_ln55_fu_493_p2 = (trunc_ln5_fu_483_p4 + res_0_08_reg_288);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_151 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_39 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_data_0_val113_phi_reg_330 = 'bx;

assign ap_phi_reg_pp0_iter0_data_1_val214_phi_reg_342 = 'bx;

assign ap_phi_reg_pp0_iter0_data_2_val315_phi_reg_354 = 'bx;

assign ap_phi_reg_pp0_iter0_data_3_val416_phi_reg_366 = 'bx;

assign ap_phi_reg_pp0_iter0_data_4_val517_phi_reg_378 = 'bx;

assign ap_phi_reg_pp0_iter0_data_5_val618_phi_reg_390 = 'bx;

assign ap_phi_reg_pp0_iter0_data_6_val719_phi_reg_402 = 'bx;

assign ap_phi_reg_pp0_iter0_data_7_val820_phi_reg_414 = 'bx;

assign icmp_ln43_fu_437_p2 = ((ap_phi_mux_w_index3_phi_fu_165_p6 == 3'd7) ? 1'b1 : 1'b0);

assign mul_ln55_1_fu_513_p1 = sext_ln73_1_fu_473_p1;

assign mul_ln55_2_fu_549_p0 = sext_ln73_1_fu_473_p1;

assign mul_ln55_fu_477_p1 = sext_ln73_1_fu_473_p1;

assign sext_ln73_1_fu_473_p1 = $signed(a_fu_443_p10);

assign tmp_fu_535_p4 = {{w18_q0[42:32]}};

assign trunc_ln55_1_fu_519_p4 = {{mul_ln55_1_fu_513_p2[25:10]}};

assign trunc_ln55_2_fu_555_p4 = {{mul_ln55_2_fu_549_p2[25:10]}};

assign trunc_ln5_fu_483_p4 = {{mul_ln55_fu_477_p2[25:10]}};

assign w18_address0 = zext_ln43_fu_426_p1;

assign w_1_fu_499_p4 = {{w18_q0[31:16]}};

assign w_fu_465_p1 = w18_q0[15:0];

assign w_index_fu_431_p2 = (ap_phi_mux_w_index3_phi_fu_165_p6 + 3'd1);

assign zext_ln43_fu_426_p1 = ap_phi_mux_w_index3_phi_fu_165_p6;

endmodule //process_data_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config18_s
